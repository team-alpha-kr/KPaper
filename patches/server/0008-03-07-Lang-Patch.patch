From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: norhu1130 <norhu1130@naver.com>
Date: Sun, 7 Mar 2021 11:15:21 +0900
Subject: [PATCH] 03-07 Lang Patch


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 6202e18268d9cd50312a73d86479426688c2e927..e91209d5fb6f36497772febc3597ce157a04708b 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -953,13 +953,14 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
                 // anything at 3+ won't be caught here but also will trip watchdog....
                 // tasks are default scheduled at -1 + delay, and first tick will tick at 1
                 // KPaper Start
-		//String doneTime = String.format(java.util.Locale.ROOT, "%.3fs", (double) (SystemUtils.getMonotonicNanos() - serverStartTime) / 1.0E9D);
+		String doneTime = String.format(java.util.Locale.ROOT, "%.3fs", (double) (SystemUtils.getMonotonicNanos() - serverStartTime) / 1.0E9D);
                 LOGGER.info("********************************");
 		LOGGER.info("*");
 		LOGGER.info("*           KPAPER");
 		LOGGER.info("*");
 		LOGGER.info("* 현재 상태 : [ 부팅 완료 ]");
 		LOGGER.info("********************************");
+		LOGGER.info("Done! ({})", doneTime);
 		// KPaper end
                 // Paper end
 
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 7c4d9559474aebd9f7018d2e4195ec7046d6066f..007087fb0b74aed8dc241c1ca0398de65b99c0e1 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -394,7 +394,7 @@ public final class CraftServer implements Server {
                     //plugin.getLogger().info(message);
                     plugin.onLoad();
                 } catch (Throwable ex) {
-                    Logger.getLogger(CraftServer.class.getName()).log(Level.SEVERE, ex.getMessage() + " initializing " + plugin.getDescription().getFullName() + " (Is it up to date?)", ex);
+                    Logger.getLogger(CraftServer.class.getName()).log(Level.SEVERE, ex.getMessage() + " 초기화중 " + plugin.getDescription().getFullName() + " (최신버전인가요?)", ex);
                 }
             }
         } else {
@@ -494,14 +494,14 @@ public final class CraftServer implements Server {
                 try {
                     pluginManager.addPermission(perm, false);
                 } catch (IllegalArgumentException ex) {
-                    getLogger().log(Level.WARNING, "Plugin " + plugin.getDescription().getFullName() + " tried to register permission '" + perm.getName() + "' but it's already registered", ex);
+                    getLogger().log(Level.WARNING, "플러그인 " + plugin.getDescription().getFullName() + " 펄미션 등록 실패 '" + perm.getName() + "' 해당 펄미션은 이미 등록되었습니다.", ex);
                 }
             }
             pluginManager.dirtyPermissibles();
 
             pluginManager.enablePlugin(plugin);
         } catch (Throwable ex) {
-            Logger.getLogger(CraftServer.class.getName()).log(Level.SEVERE, ex.getMessage() + " loading " + plugin.getDescription().getFullName() + " (Is it up to date?)", ex);
+            Logger.getLogger(CraftServer.class.getName()).log(Level.SEVERE, ex.getMessage() + " 로딩중 " + plugin.getDescription().getFullName() + " (최신버전인가요?)", ex);
         }
     }
 
@@ -995,7 +995,7 @@ public final class CraftServer implements Server {
                 icon = loadServerIcon0(file);
             }
         } catch (Exception ex) {
-            getLogger().log(Level.WARNING, "Couldn't load server icon", ex);
+            getLogger().log(Level.WARNING, "서버 아이콘을 찾지 못했어요!", ex);
         }
     }
 
@@ -1031,7 +1031,7 @@ public final class CraftServer implements Server {
         }
 
         if (perms == null) {
-            getLogger().log(Level.INFO, "Server permissions file " + file + " is empty, ignoring it");
+            getLogger().log(Level.INFO, "서버 펄미션 파일 " + file + "이(가) 비었습니다, 생략합니다.");
             return;
         }
 
@@ -2036,8 +2036,8 @@ public final class CraftServer implements Server {
     static CraftIconCache loadServerIcon0(BufferedImage image) throws Exception {
         ByteBuf bytebuf = Unpooled.buffer();
 
-        Validate.isTrue(image.getWidth() == 64, "Must be 64 pixels wide");
-        Validate.isTrue(image.getHeight() == 64, "Must be 64 pixels high");
+        Validate.isTrue(image.getWidth() == 64, "사이즈는 64x64여야 합니다");
+        Validate.isTrue(image.getHeight() == 64, "사이즈는 64x64여야 합니다");
         ImageIO.write(image, "PNG", new ByteBufOutputStream(bytebuf));
         ByteBuffer bytebuffer = Base64.getEncoder().encode(bytebuf.nioBuffer());
 
